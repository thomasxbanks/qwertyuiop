/* LXLabs cooper-az-respitool v1.0.0 */
(function(a){"function"==typeof define&&define.amd?define("main",a):a()})(function(){'use strict';function a(a){console.log("clicky mcclickface");const{cordova:b}=window,{target:c}=a,{mime:d}=c.dataset||"application/vnd.ms-powerpoint",e=b?`${b.file.applicationDirectory}www${c.dataset.href}`:c.dataset.href;b?b.plugins.fileOpener2.open(e,d,{error:()=>h(e),success:()=>console.info("success")}):fetch(e).then(a=>{a&&200>=a.status?window.open(e):h(e)}).catch(()=>{h(e)})}function b(){const b=document.querySelectorAll("[data-resource], [data-slidedeck]");b&&[...b].forEach(b=>{[...b.querySelectorAll("button")].forEach(b=>{b.addEventListener("click",b=>a(b),!1)})})}function c(){const a=Array.from(document.querySelectorAll(".grid"));console.log(a),a&&a.forEach(a=>{const b=a.querySelector(".content");b&&(b.style.opacity=1)})}function d(){// Get the hidden links
const a=Array.from(document.querySelectorAll(".page-navigation li[data-visible]")),b=localStorage.rowsToShow?JSON.parse(localStorage.rowsToShow):null;// Get the rows to show from local storage
b&&a.forEach(a=>{a.setAttribute("data-visible",!!(-1<b.indexOf(a.dataset.target)))})}function e(){const a=document.querySelector("[data-page=\"homepage\"]");a&&localStorage.removeItem("rowsToShow")}function f(){const a=Array.from(document.querySelectorAll("[data-action=\"save-compound-data\"]"));a&&a.forEach(a=>{a.addEventListener("click",a=>{const b=a.currentTarget.dataset.target;if(confirm(`This will show all of the data for ${b}. Are you sure?`)){const a=localStorage.getItem("rowsToShow");if(a){const c=JSON.parse(a);-1===c.indexOf(b)&&(c.push(b),localStorage.setItem("rowsToShow",JSON.stringify(c)),document.location.reload())}else localStorage.setItem("rowsToShow",JSON.stringify([b])),document.location.reload()}})})}function g(){const a=document.querySelector(".stop-motion_animation");if(a&&"true"===document.body.dataset.active){const b=Array.from(a.querySelectorAll("img:not(.fallback)"));let c=b.length;const d=()=>{setInterval(()=>{const b=a.querySelector("img");a.insertAdjacentElement("beforeend",b)},40)},e=()=>{const b=a.querySelector(".fallback");b.style.transition=`opacity ease ${300}ms`,b.style.opacity=0,setTimeout(()=>{// Remove the fallback image
b.outerHTML="",d()},300)},f=()=>{c=0===c?0:c-1,0===c&&e()};b.forEach(a=>{a.complete?f():a.addEventListener("load",f)})}}// utils.js
/**
   * Detects if app is running in Cordova/PhoneGap environment.
   *
   * @return {Bool} - is PhoneGap true/false.
   */const h=a=>{alert(`File (${a}) not found.`)},i=()=>{document.body.dataset.active=!0,b(),d(),c(),f(),e(),g()};(function(){return!!((window.cordova||window.PhoneGap||window.phonegap)&&/ios|iphone|ipod|ipad|android/i.test(navigator.userAgent))}/* eslint-enable */)()?document.addEventListener("deviceready",i):window.addEventListener("load",i)});

//# sourceMappingURL=data:application/json;charset=utf8;base64,
